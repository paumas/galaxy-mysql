---

- name: MYSQL | CHECK MYSQL REPO
  yum: name=mysql-community-release state=present
  register: find_mysql
  ignore_errors: true

- name: MYSQL | INSTALL MYSQL REPO
  yum: name=http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm state=present
  when: find_mysql|failed

- name: MYSQL | INSTALL PYTHON BINDINGS
  yum: name=MySQL-python state=present

- name: MYSQL | INSTALL
  yum: name=mysql-community-server state=present enablerepo=mysql56-community

- name: MYSQL | RUN ON STARTUP
  service: name=mysqld enabled=yes state=started

- name: MYSQL | copy .my.cnf file with root password credentials
  template: src=my.cnf.j2 dest=~/.my.cnf mode=0600
  notify:
   - restart mysql

- name: MYSQL | update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_password }} login_user=root login_password={{ mysql_root_password }} check_implicit_admin=yes
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost

- name: ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent
  with_items:
    - localhost
    - "{{ ansible_hostname }}"

- name: remove the test database
  mysql_db: name=test state=absent

- name: Create Database
  action: mysql_db login_user=root login_password={{ mysql_root_password }} name="{{ item.name }}"
  with_items:  mysql_users
  when:  mysql_users is defined

- name: Adds required MySQL users
  mysql_user: login_user=root login_password={{ mysql_root_password }} user="{{ item.name }}" password="{{ item.password }}" priv="{{ item.privs }}"
  with_items:  mysql_users
  when:  mysql_users is defined
